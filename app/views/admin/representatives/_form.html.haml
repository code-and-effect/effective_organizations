= effective_form_with(model: [:admin, representative], engine: true) do |f|
  - f.object.user_type ||= current_user.class.name

  = f.hidden_field :user_id
  = f.hidden_field :user_type
  = f.hidden_field :organization_id

  - if f.object.new_record?
    - unless inline_datatable? && inline_datatable.attributes[:organization_id].present?
      = f.select :organization, { 'Organizations' => EffectiveOrganizations.Organization.sorted }, polymorphic: true

    = f.checks :roles, EffectiveRoles.roles_collection(f.object)

    - unless inline_datatable? && inline_datatable.attributes[:user_id].present?
      = f.radios :new_representative_user_action, ['Invite new user', 'Add existing user'], inline: true, label: 'Representative'

      = f.show_if :new_representative_user_action, 'Add existing user' do
        = f.select :user, {'Users' => current_user.class.sorted }, polymorphic: true

      = f.show_if :new_representative_user_action, 'Invite new user' do
        = f.fields_for :user, (f.object.user || f.object.build_user) do |fu|
          = render 'admin/representatives/user_fields', f: fu

  - if f.object.persisted?
    - unless inline_datatable? && inline_datatable.attributes[:organization_id].present?
      = f.static_field :organization

    - unless inline_datatable? && inline_datatable.attributes[:user_id].present?
      = f.static_field :user

    = f.checks :roles, EffectiveRoles.roles_collection(f.object)

    - unless inline_datatable? && inline_datatable.attributes[:user_id].present?
      = f.fields_for :user, f.object.user do |fu|
        = render 'admin/representatives/user_fields', f: fu

  = f.submit
